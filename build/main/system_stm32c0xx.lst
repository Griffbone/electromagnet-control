ARM GAS  /tmp/ccoywm1B.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32c0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/system/system_stm32c0xx.c"
  18              		.section	.text.SystemInit,"ax",%progbits
  19              		.align	1
  20              		.p2align 2,,3
  21              		.global	SystemInit
  22              		.syntax unified
  23              		.code	16
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB214:
   1:src/system/system_stm32c0xx.c **** /**
   2:src/system/system_stm32c0xx.c ****   ******************************************************************************
   3:src/system/system_stm32c0xx.c ****   * @file    system_stm32c0xx.c
   4:src/system/system_stm32c0xx.c ****   * @author  MCD Application Team
   5:src/system/system_stm32c0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File
   6:src/system/system_stm32c0xx.c ****   *
   7:src/system/system_stm32c0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:src/system/system_stm32c0xx.c ****   *   user application:
   9:src/system/system_stm32c0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:src/system/system_stm32c0xx.c ****   *                      before branch to main program. This call is made inside
  11:src/system/system_stm32c0xx.c ****   *                      the "startup_stm32c0xx.s" file.
  12:src/system/system_stm32c0xx.c ****   *
  13:src/system/system_stm32c0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:src/system/system_stm32c0xx.c ****   *                                  by the user application to setup the SysTick
  15:src/system/system_stm32c0xx.c ****   *                                  timer or configure other parameters.
  16:src/system/system_stm32c0xx.c ****   *
  17:src/system/system_stm32c0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:src/system/system_stm32c0xx.c ****   *                                 be called whenever the core clock is changed
  19:src/system/system_stm32c0xx.c ****   *                                 during program execution.
  20:src/system/system_stm32c0xx.c ****   *
  21:src/system/system_stm32c0xx.c ****   ******************************************************************************
  22:src/system/system_stm32c0xx.c ****   * @attention
  23:src/system/system_stm32c0xx.c ****   *
  24:src/system/system_stm32c0xx.c ****   * Copyright (c) 2022 STMicroelectronics.
  25:src/system/system_stm32c0xx.c ****   * All rights reserved.
  26:src/system/system_stm32c0xx.c ****   *
  27:src/system/system_stm32c0xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  28:src/system/system_stm32c0xx.c ****   * in the root directory of this software component.
  29:src/system/system_stm32c0xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  30:src/system/system_stm32c0xx.c ****   *
  31:src/system/system_stm32c0xx.c ****   ******************************************************************************
ARM GAS  /tmp/ccoywm1B.s 			page 2


  32:src/system/system_stm32c0xx.c ****   */
  33:src/system/system_stm32c0xx.c **** 
  34:src/system/system_stm32c0xx.c **** /** @addtogroup CMSIS
  35:src/system/system_stm32c0xx.c ****   * @{
  36:src/system/system_stm32c0xx.c ****   */
  37:src/system/system_stm32c0xx.c **** 
  38:src/system/system_stm32c0xx.c **** /** @addtogroup stm32c0xx_system
  39:src/system/system_stm32c0xx.c ****   * @{
  40:src/system/system_stm32c0xx.c ****   */
  41:src/system/system_stm32c0xx.c **** 
  42:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Includes
  43:src/system/system_stm32c0xx.c ****   * @{
  44:src/system/system_stm32c0xx.c ****   */
  45:src/system/system_stm32c0xx.c **** 
  46:src/system/system_stm32c0xx.c **** #include "stm32c0xx.h"
  47:src/system/system_stm32c0xx.c **** 
  48:src/system/system_stm32c0xx.c **** #if !defined  (HSE_VALUE)
  49:src/system/system_stm32c0xx.c **** #define HSE_VALUE    (48000000UL)    /*!< Value of the External oscillator in Hz */
  50:src/system/system_stm32c0xx.c **** #endif /* HSE_VALUE */
  51:src/system/system_stm32c0xx.c **** 
  52:src/system/system_stm32c0xx.c **** #if !defined  (HSI_VALUE)
  53:src/system/system_stm32c0xx.c ****   #define HSI_VALUE  (48000000UL)   /*!< Value of the Internal oscillator in Hz*/
  54:src/system/system_stm32c0xx.c **** #endif /* HSI_VALUE */
  55:src/system/system_stm32c0xx.c **** 
  56:src/system/system_stm32c0xx.c **** #if !defined  (LSI_VALUE)
  57:src/system/system_stm32c0xx.c ****  #define LSI_VALUE   (32000UL)     /*!< Value of LSI in Hz*/
  58:src/system/system_stm32c0xx.c **** #endif /* LSI_VALUE */
  59:src/system/system_stm32c0xx.c **** 
  60:src/system/system_stm32c0xx.c **** #if !defined  (LSE_VALUE)
  61:src/system/system_stm32c0xx.c ****   #define LSE_VALUE  (32768UL)      /*!< Value of LSE in Hz*/
  62:src/system/system_stm32c0xx.c **** #endif /* LSE_VALUE */
  63:src/system/system_stm32c0xx.c **** 
  64:src/system/system_stm32c0xx.c **** /**
  65:src/system/system_stm32c0xx.c ****   * @}
  66:src/system/system_stm32c0xx.c ****   */
  67:src/system/system_stm32c0xx.c **** 
  68:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_TypesDefinitions
  69:src/system/system_stm32c0xx.c ****   * @{
  70:src/system/system_stm32c0xx.c ****   */
  71:src/system/system_stm32c0xx.c **** 
  72:src/system/system_stm32c0xx.c **** /**
  73:src/system/system_stm32c0xx.c ****   * @}
  74:src/system/system_stm32c0xx.c ****   */
  75:src/system/system_stm32c0xx.c **** 
  76:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Defines
  77:src/system/system_stm32c0xx.c ****   * @{
  78:src/system/system_stm32c0xx.c ****   */
  79:src/system/system_stm32c0xx.c **** 
  80:src/system/system_stm32c0xx.c **** /************************* Miscellaneous Configuration ************************/
  81:src/system/system_stm32c0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  82:src/system/system_stm32c0xx.c ****      Internal SRAM. */
  83:src/system/system_stm32c0xx.c **** //#define VECT_TAB_SRAM 
  84:src/system/system_stm32c0xx.c **** #define VECT_TAB_OFFSET  0x0U /*!< Vector Table base offset field.
  85:src/system/system_stm32c0xx.c ****                                    This value must be a multiple of 0x100. */
  86:src/system/system_stm32c0xx.c **** /******************************************************************************/
  87:src/system/system_stm32c0xx.c **** /**
  88:src/system/system_stm32c0xx.c ****   * @}
ARM GAS  /tmp/ccoywm1B.s 			page 3


  89:src/system/system_stm32c0xx.c ****   */
  90:src/system/system_stm32c0xx.c **** 
  91:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Macros
  92:src/system/system_stm32c0xx.c ****   * @{
  93:src/system/system_stm32c0xx.c ****   */
  94:src/system/system_stm32c0xx.c **** 
  95:src/system/system_stm32c0xx.c **** /**
  96:src/system/system_stm32c0xx.c ****   * @}
  97:src/system/system_stm32c0xx.c ****   */
  98:src/system/system_stm32c0xx.c **** 
  99:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Variables
 100:src/system/system_stm32c0xx.c ****   * @{
 101:src/system/system_stm32c0xx.c ****   */
 102:src/system/system_stm32c0xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 103:src/system/system_stm32c0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 104:src/system/system_stm32c0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 105:src/system/system_stm32c0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 106:src/system/system_stm32c0xx.c ****          Note: If you use this function to configure the system clock; then there
 107:src/system/system_stm32c0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 108:src/system/system_stm32c0xx.c ****                variable is updated automatically.
 109:src/system/system_stm32c0xx.c ****   */
 110:src/system/system_stm32c0xx.c ****   uint32_t SystemCoreClock = 48000000UL;
 111:src/system/system_stm32c0xx.c **** 
 112:src/system/system_stm32c0xx.c ****   const uint32_t AHBPrescTable[16UL] = {0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL,
 113:src/system/system_stm32c0xx.c ****   const uint32_t APBPrescTable[8UL] =  {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
 114:src/system/system_stm32c0xx.c **** 
 115:src/system/system_stm32c0xx.c **** /**
 116:src/system/system_stm32c0xx.c ****   * @}
 117:src/system/system_stm32c0xx.c ****   */
 118:src/system/system_stm32c0xx.c **** 
 119:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_FunctionPrototypes
 120:src/system/system_stm32c0xx.c ****   * @{
 121:src/system/system_stm32c0xx.c ****   */
 122:src/system/system_stm32c0xx.c **** 
 123:src/system/system_stm32c0xx.c **** /**
 124:src/system/system_stm32c0xx.c ****   * @}
 125:src/system/system_stm32c0xx.c ****   */
 126:src/system/system_stm32c0xx.c **** 
 127:src/system/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Functions
 128:src/system/system_stm32c0xx.c ****   * @{
 129:src/system/system_stm32c0xx.c ****   */
 130:src/system/system_stm32c0xx.c **** 
 131:src/system/system_stm32c0xx.c **** /**
 132:src/system/system_stm32c0xx.c ****   * @brief  Setup the microcontroller system.
 133:src/system/system_stm32c0xx.c ****   * @param  None
 134:src/system/system_stm32c0xx.c ****   * @retval None
 135:src/system/system_stm32c0xx.c ****   */
 136:src/system/system_stm32c0xx.c **** void SystemInit(void)
 137:src/system/system_stm32c0xx.c **** {
  28              		.loc 1 137 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 138:src/system/system_stm32c0xx.c ****   
 139:src/system/system_stm32c0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 140:src/system/system_stm32c0xx.c **** #ifdef VECT_TAB_SRAM
ARM GAS  /tmp/ccoywm1B.s 			page 4


 141:src/system/system_stm32c0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 142:src/system/system_stm32c0xx.c **** #else
 143:src/system/system_stm32c0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  33              		.loc 1 143 3 view .LVU1
  34              		.loc 1 143 13 is_stmt 0 view .LVU2
  35 0000 8022     		movs	r2, #128
 144:src/system/system_stm32c0xx.c **** #endif
 145:src/system/system_stm32c0xx.c **** }
  36              		.loc 1 145 1 view .LVU3
  37              		@ sp needed
 143:src/system/system_stm32c0xx.c **** #endif
  38              		.loc 1 143 13 view .LVU4
  39 0002 024B     		ldr	r3, .L3
  40 0004 1205     		lsls	r2, r2, #20
  41 0006 9A60     		str	r2, [r3, #8]
  42              		.loc 1 145 1 view .LVU5
  43 0008 7047     		bx	lr
  44              	.L4:
  45 000a C046     		.align	2
  46              	.L3:
  47 000c 00ED00E0 		.word	-536810240
  48              		.cfi_endproc
  49              	.LFE214:
  51              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  52              		.align	1
  53              		.p2align 2,,3
  54              		.global	SystemCoreClockUpdate
  55              		.syntax unified
  56              		.code	16
  57              		.thumb_func
  59              	SystemCoreClockUpdate:
  60              	.LFB215:
 146:src/system/system_stm32c0xx.c **** 
 147:src/system/system_stm32c0xx.c **** /**
 148:src/system/system_stm32c0xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 149:src/system/system_stm32c0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 150:src/system/system_stm32c0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 151:src/system/system_stm32c0xx.c ****   *         other parameters.
 152:src/system/system_stm32c0xx.c ****   *
 153:src/system/system_stm32c0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 154:src/system/system_stm32c0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 155:src/system/system_stm32c0xx.c ****   *         based on this variable will be incorrect.
 156:src/system/system_stm32c0xx.c ****   *
 157:src/system/system_stm32c0xx.c ****   * @note   - The system frequency computed by this function is not the real
 158:src/system/system_stm32c0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 159:src/system/system_stm32c0xx.c ****   *           constant and the selected clock source:
 160:src/system/system_stm32c0xx.c ****   *
 161:src/system/system_stm32c0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**) / HSI divis
 162:src/system/system_stm32c0xx.c ****   *
 163:src/system/system_stm32c0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 164:src/system/system_stm32c0xx.c ****   *
 165:src/system/system_stm32c0xx.c ****   *           - If SYSCLK source is LSI, SystemCoreClock will contain the LSI_VALUE
 166:src/system/system_stm32c0xx.c ****   *
 167:src/system/system_stm32c0xx.c ****   *           - If SYSCLK source is LSE, SystemCoreClock will contain the LSE_VALUE
 168:src/system/system_stm32c0xx.c ****   *
 169:src/system/system_stm32c0xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32c0xx_hal_conf.h file (default value
 170:src/system/system_stm32c0xx.c ****   *              48 MHz) but the real value may vary depending on the variations
ARM GAS  /tmp/ccoywm1B.s 			page 5


 171:src/system/system_stm32c0xx.c ****   *              in voltage and temperature.
 172:src/system/system_stm32c0xx.c ****   *
 173:src/system/system_stm32c0xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32c0xx_hal_conf.h file (default value
 174:src/system/system_stm32c0xx.c ****   *              48 MHz), user has to ensure that HSE_VALUE is same as the real
 175:src/system/system_stm32c0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 176:src/system/system_stm32c0xx.c ****   *              have wrong result.
 177:src/system/system_stm32c0xx.c ****   *
 178:src/system/system_stm32c0xx.c ****   *         - The result of this function could be not correct when using fractional
 179:src/system/system_stm32c0xx.c ****   *           value for HSE crystal.
 180:src/system/system_stm32c0xx.c ****   *
 181:src/system/system_stm32c0xx.c ****   * @param  None
 182:src/system/system_stm32c0xx.c ****   * @retval None
 183:src/system/system_stm32c0xx.c ****   */
 184:src/system/system_stm32c0xx.c **** void SystemCoreClockUpdate(void)
 185:src/system/system_stm32c0xx.c **** {
  61              		.loc 1 185 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 186:src/system/system_stm32c0xx.c ****   uint32_t tmp;
  66              		.loc 1 186 3 view .LVU7
 187:src/system/system_stm32c0xx.c ****   uint32_t hsidiv;
  67              		.loc 1 187 3 view .LVU8
 188:src/system/system_stm32c0xx.c **** 
 189:src/system/system_stm32c0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 190:src/system/system_stm32c0xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  68              		.loc 1 190 3 view .LVU9
  69              		.loc 1 190 21 is_stmt 0 view .LVU10
  70 0000 3823     		movs	r3, #56
  71              		.loc 1 190 14 view .LVU11
  72 0002 104A     		ldr	r2, .L10
  73 0004 9168     		ldr	r1, [r2, #8]
  74              		.loc 1 190 21 view .LVU12
  75 0006 0B40     		ands	r3, r1
  76              		.loc 1 190 3 view .LVU13
  77 0008 182B     		cmp	r3, #24
  78 000a 18D0     		beq	.L7
  79 000c 202B     		cmp	r3, #32
  80 000e 11D0     		beq	.L8
  81 0010 082B     		cmp	r3, #8
  82 0012 12D0     		beq	.L9
 191:src/system/system_stm32c0xx.c ****   {
 192:src/system/system_stm32c0xx.c ****     case RCC_CFGR_SWS_0:                /* HSE used as system clock */
 193:src/system/system_stm32c0xx.c ****       SystemCoreClock = HSE_VALUE;
 194:src/system/system_stm32c0xx.c ****       break;
 195:src/system/system_stm32c0xx.c **** 
 196:src/system/system_stm32c0xx.c ****     case (RCC_CFGR_SWS_1 | RCC_CFGR_SWS_0):  /* LSI used as system clock */
 197:src/system/system_stm32c0xx.c ****       SystemCoreClock = LSI_VALUE;
 198:src/system/system_stm32c0xx.c ****       break;
 199:src/system/system_stm32c0xx.c **** 
 200:src/system/system_stm32c0xx.c ****     case RCC_CFGR_SWS_2:                /* LSE used as system clock */
 201:src/system/system_stm32c0xx.c ****       SystemCoreClock = LSE_VALUE;
 202:src/system/system_stm32c0xx.c ****       break;
 203:src/system/system_stm32c0xx.c **** 
 204:src/system/system_stm32c0xx.c ****     case 0x00000000U:                   /* HSI used as system clock */
 205:src/system/system_stm32c0xx.c ****     default:                            /* HSI used as system clock */
ARM GAS  /tmp/ccoywm1B.s 			page 6


 206:src/system/system_stm32c0xx.c ****       hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV))>> RCC_CR_HSIDIV_Pos));
  83              		.loc 1 206 7 is_stmt 1 view .LVU14
  84              		.loc 1 206 26 is_stmt 0 view .LVU15
  85 0014 1368     		ldr	r3, [r2]
  86              	.LVL0:
 207:src/system/system_stm32c0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
  87              		.loc 1 207 7 is_stmt 1 view .LVU16
  88              		.loc 1 207 35 is_stmt 0 view .LVU17
  89 0016 0C4A     		ldr	r2, .L10+4
 206:src/system/system_stm32c0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
  90              		.loc 1 206 59 view .LVU18
  91 0018 9B04     		lsls	r3, r3, #18
  92              	.LVL1:
 206:src/system/system_stm32c0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
  93              		.loc 1 206 59 view .LVU19
  94 001a 5B0F     		lsrs	r3, r3, #29
  95              		.loc 1 207 35 view .LVU20
  96 001c DA40     		lsrs	r2, r2, r3
 208:src/system/system_stm32c0xx.c ****       break;
  97              		.loc 1 208 7 is_stmt 1 view .LVU21
  98              	.LVL2:
  99              	.L6:
 209:src/system/system_stm32c0xx.c ****   }
 210:src/system/system_stm32c0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 211:src/system/system_stm32c0xx.c ****   /* Get HCLK prescaler */
 212:src/system/system_stm32c0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 100              		.loc 1 212 3 view .LVU22
 213:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 214:src/system/system_stm32c0xx.c ****   SystemCoreClock >>= tmp;
 215:src/system/system_stm32c0xx.c **** }
 101              		.loc 1 215 1 is_stmt 0 view .LVU23
 102              		@ sp needed
 212:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 103              		.loc 1 212 28 view .LVU24
 104 001e 094B     		ldr	r3, .L10
 212:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 105              		.loc 1 212 7 view .LVU25
 106 0020 0A49     		ldr	r1, .L10+8
 212:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 107              		.loc 1 212 28 view .LVU26
 108 0022 9B68     		ldr	r3, [r3, #8]
 109              	.LVL3:
 214:src/system/system_stm32c0xx.c **** }
 110              		.loc 1 214 3 is_stmt 1 view .LVU27
 214:src/system/system_stm32c0xx.c **** }
 111              		.loc 1 214 19 is_stmt 0 view .LVU28
 112 0024 0A48     		ldr	r0, .L10+12
 212:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 113              		.loc 1 212 52 view .LVU29
 114 0026 1B05     		lsls	r3, r3, #20
 115              	.LVL4:
 212:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 116              		.loc 1 212 52 view .LVU30
 117 0028 1B0F     		lsrs	r3, r3, #28
 212:src/system/system_stm32c0xx.c ****   /* HCLK clock frequency */
 118              		.loc 1 212 7 view .LVU31
 119 002a 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccoywm1B.s 			page 7


 214:src/system/system_stm32c0xx.c **** }
 120              		.loc 1 214 19 view .LVU32
 121 002c 5B58     		ldr	r3, [r3, r1]
 122 002e DA40     		lsrs	r2, r2, r3
 123 0030 0260     		str	r2, [r0]
 124              		.loc 1 215 1 view .LVU33
 125 0032 7047     		bx	lr
 126              	.LVL5:
 127              	.L8:
 190:src/system/system_stm32c0xx.c ****   {
 128              		.loc 1 190 3 view .LVU34
 129 0034 8022     		movs	r2, #128
 130 0036 1202     		lsls	r2, r2, #8
 131 0038 F1E7     		b	.L6
 132              	.L9:
 133 003a 034A     		ldr	r2, .L10+4
 134 003c EFE7     		b	.L6
 135              	.L7:
 136 003e FA22     		movs	r2, #250
 137 0040 D201     		lsls	r2, r2, #7
 138 0042 ECE7     		b	.L6
 139              	.L11:
 140              		.align	2
 141              	.L10:
 142 0044 00100240 		.word	1073876992
 143 0048 006CDC02 		.word	48000000
 144 004c 00000000 		.word	AHBPrescTable
 145 0050 00000000 		.word	SystemCoreClock
 146              		.cfi_endproc
 147              	.LFE215:
 149              		.global	APBPrescTable
 150              		.section	.rodata.APBPrescTable,"a"
 151              		.align	2
 154              	APBPrescTable:
 155 0000 00000000 		.word	0
 156 0004 00000000 		.word	0
 157 0008 00000000 		.word	0
 158 000c 00000000 		.word	0
 159 0010 01000000 		.word	1
 160 0014 02000000 		.word	2
 161 0018 03000000 		.word	3
 162 001c 04000000 		.word	4
 163              		.global	AHBPrescTable
 164              		.section	.rodata.AHBPrescTable,"a"
 165              		.align	2
 168              	AHBPrescTable:
 169 0000 00000000 		.word	0
 170 0004 00000000 		.word	0
 171 0008 00000000 		.word	0
 172 000c 00000000 		.word	0
 173 0010 00000000 		.word	0
 174 0014 00000000 		.word	0
 175 0018 00000000 		.word	0
 176 001c 00000000 		.word	0
 177 0020 01000000 		.word	1
 178 0024 02000000 		.word	2
 179 0028 03000000 		.word	3
ARM GAS  /tmp/ccoywm1B.s 			page 8


 180 002c 04000000 		.word	4
 181 0030 06000000 		.word	6
 182 0034 07000000 		.word	7
 183 0038 08000000 		.word	8
 184 003c 09000000 		.word	9
 185              		.global	SystemCoreClock
 186              		.section	.data.SystemCoreClock,"aw"
 187              		.align	2
 190              	SystemCoreClock:
 191 0000 006CDC02 		.word	48000000
 192              		.text
 193              	.Letext0:
 194              		.file 2 "external/drivers/cmsis/include/core_cm0plus.h"
 195              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 196              		.file 4 "external/drivers/cmsis/include/system_stm32c0xx.h"
 197              		.file 5 "external/drivers/cmsis/include/stm32c031xx.h"
ARM GAS  /tmp/ccoywm1B.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32c0xx.c
     /tmp/ccoywm1B.s:19     .text.SystemInit:00000000 $t
     /tmp/ccoywm1B.s:26     .text.SystemInit:00000000 SystemInit
     /tmp/ccoywm1B.s:47     .text.SystemInit:0000000c $d
     /tmp/ccoywm1B.s:52     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccoywm1B.s:59     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccoywm1B.s:142    .text.SystemCoreClockUpdate:00000044 $d
     /tmp/ccoywm1B.s:168    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccoywm1B.s:190    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccoywm1B.s:154    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/ccoywm1B.s:151    .rodata.APBPrescTable:00000000 $d
     /tmp/ccoywm1B.s:165    .rodata.AHBPrescTable:00000000 $d
     /tmp/ccoywm1B.s:187    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
